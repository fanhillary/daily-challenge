{"version":3,"sources":["firebase.js","HomeComponent/Home.js","AnalyticsComponent/Analytics.js","RegistrationComponent/Registration.js","App.js","registerServiceWorker.js","index.js"],"names":["require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","db","firestore","listAction","listActionPre","listFood","listFinance","financeTarget","listCommunication","listExercise","listExerciseNoConj","exerciseTarget","targets","listConjunction","duration","foodTarget","Home","props","state","currentChallenge","category","completed","user","generateChallenge","bind","completeChallenge","console","log","localStorage","this","document","body","style","setProperty","getElementById","getItem","transition","challenge","JSON","parse","setState","schedule","scheduleJob","clear","nextProps","min","max","Math","round","random","randomVerb","randomConjunction","randomEnd","selectedCategory","getRandomArbitrary","floor","length","challengeDetails","setItem","stringify","disabled","docRef","collection","doc","email","get","then","exists","user_data","data","new_data","challenges","type","date_completed","Date","completed_challenges","set","name","displayName","duplicates","updated_challenges","push","catch","error","className","id","onClick","data-toggle","htmlFor","autoComplete","defaultChecked","Component","withRouter","google","charts","load","Analytics","totalCompleted","categoryPieData","history","getCompletedChallenges","window","onload","drawChart","onresize","reverse","slice","categoriesCompleted","i","visualization","DataTable","addColumn","addRows","div","firstChild","removeChild","PieChart","draw","is3D","legend","map","date","toDate","key","getMonth","getDate","getFullYear","Registration","password","confirmPassword","login_email","login_password","warning","createNewUser","loginUser","validateEmail","validatePassword","fireBaseListener","onAuthStateChanged","pathname","test","ifRegistration","e","preventDefault","validateForms","createUserWithEmailAndPassword","currentUser","updateProfile","code","message","signInWithEmailAndPassword","result","onSubmit","placeholder","aria-label","value","onChange","event","target","aria-describedby","App","logOut","analyticsTabClicked","homeTabClicked","signOut","to","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e5040735.chunk.js","sourcesContent":["import firebase from 'firebase'\n// var firebase = require(\"firebase/auth\");\nrequire(\"firebase/auth\");\n\nvar config = {\n    apiKey: \"AIzaSyAYSAWMfJdxW46ZTes2IRwN3kMP5WKoTy8\",\n    authDomain: \"daily-challenge-73242.firebaseapp.com\",\n    databaseURL: \"https://daily-challenge-73242.firebaseio.com\",\n    projectId: \"daily-challenge-73242\",\n    storageBucket: \"daily-challenge-73242.appspot.com\",\n    messagingSenderId: \"1047266952950\"\n  };\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport default firebase;\n","\nimport React, { Component } from 'react';\nimport './Home.css';\nimport { db } from '../firebase.js';\nimport schedule from 'node-schedule';\nimport { withRouter } from 'react-router';\n\n// var categories = [\"Action\", \"Food\", \"Finance\", \"Exercise\", \"Communication\"];\nvar listAction = [\"Drink a beer or two\", \"Sit silently\", \"Do a good deed\", \"Be kind\", \"High five\", \"Sneak into the opposite gender restroom\", \"Do a silly dance\", \"Go outside\", \"Go out tonight\"];\nvar listActionPre = [\"Don't produce any waste today.\", \"Do one good deed.\", \"Do two good deeds.\", \"Do three good deeds.\",\"Go to work 15 minutes early.\", \"Go to work 15 minutes late.\", \"Pet a random dog.\"];\nvar listFood = [\"Don't eat any\", \"Only eat\", \"Try a new\"];\nvar listFinance = [\"Spend a maximum of\", \"Spend a minimum of\", \"Save a total of\"];\nvar financeTarget = [\"50 cents\", \"$1\", \"$5\", \"$10\", \"$50\", \"$100\"];\nvar listCommunication = [\"Talk to\", \"Spend an hour with\", \"Spend 30 minutes with\", \"Spend a day with\", \"Visit\"]\nvar listExercise = [\"Run\", \"Walk\", \"Jog\", \"Climb\", \"Skip\"];\nvar listExerciseNoConj = [\"Do 10\", \"Do 25\", \"Do 50\", \"Do 75\", \"Do 100\"];\nvar exerciseTarget = [\"push-ups\", \"sit-ups\", \"squats\", \"jumping jacks\", \"burpees\", \"high knees\", \"stretches\"];\nvar targets = [\"your significant other\", \"your pet\", \"your sibling\", \"your mother\", \"your best friend\", \"your father\", \"your friend\", \"someone you haven't contacted in a long time\", \"a distant friend\", \"a random stranger\", \"the person to your left\", \"the person to your right\", \"the person across from you\", \"an elder\", \"someone younger than you\"];\nvar listConjunction = [\"for\", \"with\"];\nvar duration = [\"5 minutes\", \"10 minutes\", \"15 minutes\", \"30 minutes\", \"45 minutes\", \"an hour\", \"two hours\", \"half a day\", \"the whole day\"];\nvar foodTarget = [\"sugar\", \"potatoes\", \"bananas\", \"fruit\", \"bread\", \"candy\", \"gluten\", \"meat\", \"Chinese food\", \"American food\", \"Thai food\", \"Vietnamese food\", \"Asian food\", \"European food\", \"Italian food\", \"French food\", \"Korean food\", \"Mexican food\", \"Indian food\", \"Malaysian food\", \"Filipino food\"];\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentChallenge: \"\",\n      category: \"\",\n      completed: false,\n      user: null,\n    };\n  \n    this.generateChallenge = this.generateChallenge.bind(this);\n    this.completeChallenge = this.completeChallenge.bind(this);\n  }\n\n/*\n* Function Name: componentDidMount()\n* Function Description: Create random challenge upon loading of page.\n* Parameters: None.\n* Return: None.\n*/\n  componentDidMount() {\n    console.log(localStorage);\n    console.log(this.props);\n    console.log(\"mounting\");\n    \n    // yellow default background\n    document.body.style.setProperty('background-color', '#FFCC00');\n    document.getElementById(\"home-tab\").style.setProperty('color', 'white');\n    document.getElementById(\"home-tab\").style.setProperty('font-weight', 'bold');\n  \n    // if user has already completed a challenge today, display appropriate message\n    if (localStorage.getItem(\"flag_daily_complete\") === \"true\") {\n      document.body.style.setProperty('background-color', 'MediumSeaGreen');\n      document.body.style.transition = \"all 1s ease-out\";\n    } else { // if haven't completed today, get challenge\n      document.body.style.setProperty('background-color', '#FFCC00');\n      document.body.style.transition = \"all 1s ease-out\";\n\n      // if haven't generated a challenge, generate one. Otherwise, use the previously generated one.\n      if (!localStorage.getItem(\"currChallenge\")) {\n        this.generateChallenge();\n      } else { // to prevent regenerate on refresh. \n        let challenge = JSON.parse(localStorage.getItem(\"currChallenge\"))\n        this.setState({currentChallenge: challenge.currentChallenge});\n        this.setState({category: challenge.category})\n      }\n    }\n    schedule.scheduleJob('0 0 * * *', () => { localStorage.clear()}) // run everyday at midnight\n    if (this.props.user) {\n      this.setState({user: this.props.user});\n    }\n  }\n\n/*\n* Called whenever App.js is rerendered to reset user state.\n* Params: nextProps - prop object holding user prop passed into Home\n*/\ncomponentWillReceiveProps(nextProps) {\n  console.log(nextProps)\n  if (nextProps.user) {\n    this.setState({user: nextProps.user});\n  } else {\n      this.setState({user: null});\n  }\n}\n\ncomponentDidUpdate(nextProps) {\n  console.log(this.props)\n  console.log(nextProps)\n  if (this.props !== nextProps) {\n    console.log(\"update user\");\n    this.setState({user: nextProps.user});\n  }\n}\n/*\n* Function Name: getRandomArbitrary\n* Function Description: Return whole number between the two given parameters\n* Parameters:\n*   int min - the minimum inclusive of range to select from\n*   int max - the maxomum inclusive of range to select from\n* Return: Randomly selected whole number between range given.\n*/\ngetRandomArbitrary(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\n\n/*\n* Function Name: generateChallenge\n* Function Description: Create random challenge by concatenating elements\n*                       from each list.\n* Parameters: None.\n* Return: None.\n*/\n  generateChallenge() {\n    var randomVerb = \"\";\n    var randomConjunction = \"\";\n    var randomEnd = \"\";\n    let challenge = \"\";\n    let category = \"\";\n    // choose a random action array to select from\n    var selectedCategory = this.getRandomArbitrary(0,4);\n     // Action Category\n     if (selectedCategory === 0) { \n      var actionType = this.getRandomArbitrary(0,1);\n\n      if (actionType === 0) {\n        // obtain a random action to start with\n        randomVerb = listAction[Math.floor(Math.random()*listAction.length)];\n        // obtain a random conjunction\n        randomConjunction = listConjunction[Math.floor(Math.random()*listConjunction.length)];\n        // get random appropriate ending based on conjunction chosen\n        if (randomConjunction === \"for\") {\n          randomEnd = duration[Math.floor(Math.random()*duration.length)];\n        } else if (randomConjunction === \"with\") {\n          randomEnd = targets[Math.floor(Math.random()*targets.length)];\n        }\n        // concatenate the entire sentence\n        challenge = randomVerb + \" \" + randomConjunction + \" \" + randomEnd + \".\";\n      } else {\n        challenge = listActionPre[Math.floor(Math.random()*listActionPre.length)];\n      }\n      category = \"Action\";\n\n      // Food Category\n    } else if (selectedCategory === 1) { \n      randomVerb= listFood[Math.floor(Math.random()*listFood.length)];\n      randomEnd = foodTarget[Math.floor(Math.random()*foodTarget.length)];\n      challenge = randomVerb + \" \" + randomEnd + \".\";\n      category = \"Food\";\n\n\n      // Finance Category\n    } else if (selectedCategory === 2) {\n      randomVerb= listFinance[Math.floor(Math.random()*listFinance.length)];\n      randomEnd = financeTarget[Math.floor(Math.random()*financeTarget.length)];\n      challenge = randomVerb + \" \" + randomEnd + \".\";\n      category = \"Finance\";\n\n      // Communication Category\n    } else if (selectedCategory === 3) {\n      randomVerb= listCommunication[Math.floor(Math.random()*listCommunication.length)];\n      randomEnd = targets[Math.floor(Math.random()*targets.length)];\n      challenge = randomVerb + \" \" + randomEnd + \".\";\n      category = \"Communication\";\n\n      // Exercise Category\n    } else {\n      var exerciseType = this.getRandomArbitrary(0,1);\n      if (exerciseType === 0) {\n        randomVerb= listExercise[Math.floor(Math.random()*listExercise.length)];\n        randomConjunction = listConjunction[Math.floor(Math.random()*listConjunction.length)];\n        \n        // get random appropriate ending based on conjunction chosen\n        if (randomConjunction === \"for\") {\n          randomEnd = duration[Math.floor(Math.random()*duration.length)];\n        } else if (randomConjunction === \"with\") {\n          randomEnd = targets[Math.floor(Math.random()*targets.length)];\n        }\n        challenge = randomVerb + \" \" + randomConjunction + \" \" + randomEnd + \".\";\n\n      } else {\n        randomVerb= listExerciseNoConj[Math.floor(Math.random()*listExerciseNoConj.length)];\n        randomEnd = exerciseTarget[Math.floor(Math.random()*exerciseTarget.length)];\n        challenge = randomVerb + \" \" + randomEnd + \".\";\n      }\n      category = \"Exercise\";\n    }\n      const challengeDetails = {\n        \"currentChallenge\": challenge,\n        \"category\": category,\n      }    \n      localStorage.setItem(\"currChallenge\", JSON.stringify(challengeDetails));\n      this.setState({currentChallenge: challenge});\n      this.setState({category: category});\n  }\n  \n/*\n* Function Name: completeChallenge\n* Function Description: Saves the challenge into complete database and changes css appropriately.\n* Parameters: None.\n* Return: None.\n*/\n  completeChallenge() {\n    if (document.getElementById(\"refreshChallenge\")) {\n      document.getElementById(\"refreshChallenge\").disabled = true;\n    }\n    document.body.style.setProperty('background-color', 'MediumSeaGreen');\n    document.body.style.transition = \"all 1s ease-out\";\n\n    if(this.state.currentChallenge !== \"\" && this.state.currentChallenge !== null) {\n      if(this.props.user) {\n        var docRef = db.collection(\"users\").doc(this.props.user.email);\n\n        docRef.get().then((doc) => {\n          if (doc.exists) { // if user exists\n            // obtain current completed challenges from firestore\n            var user_data = doc.data();\n            let new_data = {\n              challenges: this.state.currentChallenge,\n              type: this.state.category,\n              date_completed: new Date(),\n            };\n            console.log(\"Document data:\", user_data);\n\n            // if the data document has no data, insert first of its kind\n            if(user_data.completed_challenges == null) {\n              console.log(\"empty data\");\n              docRef.set({\n                name: this.props.user.displayName,\n                completed_challenges: [new_data],\n                duplicates: false\n              });\n            } else { // tack on newly completed challenge into firestore\n              var updated_challenges = user_data.completed_challenges;\n              updated_challenges.push(new_data);\n              docRef.set({\n                name: this.props.user.displayName,\n                completed_challenges: updated_challenges,\n                duplicates: false\n              });\n            }\n          }\n        }).catch(function(error) {\n            console.log(\"Error getting document:\", error);\n        });\n      } else {\n        console.log(\"guest user\")\n      }\n      localStorage.setItem( 'flag_daily_complete', true );\n      this.setState({completed: true});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n            { this.state.user ? <h2> Hi {this.state.user.displayName}! </h2> : <h2> Hi Guest! </h2> }\n            { localStorage.getItem(\"flag_daily_complete\") === \"true\" ? <h1> Congratulations! </h1> :\n            <div className=\"prompt\"> \n              <h3> Today's Challenge:</h3> \n              <h1 className=\"challenge\"> {this.state.currentChallenge} </h1>\n              <p> Category: {this.state.category} </p>\n              <button type=\"button\" id=\"refreshChallenge\" onClick={this.generateChallenge} className=\"btn btn-light\">Reroll for another challenge!</button>\n            </div>\n\n            }\n        </div>\n\n        \n        {  localStorage.getItem(\"flag_daily_complete\") === \"true\" ?\n          <div className=\"form-container\">\n            <h2> You've completed your daily task. </h2>\n            <br></br>\n            { this.props.user?\n              <h4> You will receive a new challenge after midnight! Meanwhile, check out the analytics tab. </h4>\n              :\n              <h4> You will receive a new challenge after midnight! Register to view your analytics! </h4>\n            }\n          </div>\n          :\n          <div className=\"form-container\">\n            <form>\n              <div>\n                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n\n                  <label htmlFor=\"completeOption1\" className=\"completeBtn btn btn-secondary active\">\n                    <input type=\"radio\" name=\"completeOption1\" id=\"incomplete\" autoComplete=\"off\" defaultChecked/> Incomplete\n                  </label>  \n                  <label htmlFor=\"completeOption2\" className=\"completeBtn btn btn-secondary\" onClick={this.completeChallenge}>\n                    <input name=\"completeOption2\" type=\"radio\" id=\"complete\" autoComplete=\"off\" /> Complete\n                  </label>\n                </div>\n              </div>\n            </form>\n          </div>\n        }\n        <div className=\"note\">\n          <p> Note: Only one challenge can be completed per day and it cannot be undone. </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(Home);\n\n","/*global google*/\n// important - above line is necessary for google chart\nimport React, { Component } from 'react';\nimport \"./Analytics.css\";\nimport { db } from '../firebase.js';\nimport { withRouter } from 'react-router';\n\n// Load the Visualization API and the corechart package.\ngoogle.charts.load('current', {'packages':['corechart']});\n\nclass Analytics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCompleted: 0,\n      categoryPieData: [],\n      completed_challenges: [],\n    };\n  }\n\n  /*\n  * Function Name: componentDidMount()\n  * Function Description: Check if logged_on is active in local storage. If not, route to home page. \n  *                       If so, apply draw chart listeners and render page.\n  * Parameters: None.\n  * Return: None.\n  */\n  componentDidMount() {\n    console.log(this.state.completed_challenges);\n    // if not logged on, redirect to home.\n    if (!localStorage.getItem(\"logged_on\")) {\n      this.props.history.push('/');\n    }\n    console.log(localStorage);\n    if (localStorage.getItem(\"user\")) { \n      this.getCompletedChallenges(JSON.parse(localStorage.getItem(\"user\")));\n      window.onload = this.drawChart;\n      window.onresize = this.drawChart;\n    }\n  }\n  /*\n  * Function Name: getCompletedChallenges()\n  * Function Description: Create random challenge upon loading of page.\n  * Parameters: None.\n  * Return: None.\n  */\n  getCompletedChallenges(user) {\n    var docRef = db.collection(\"users\").doc(user.email);\n    docRef.get().then((doc) => {\n      // get the data of completed challenges \n      var user_data = doc.data();\n\n      // get the total completed and get the most recent 10 challenges\n      this.setState({ totalCompleted: user_data.completed_challenges.length });\n      this.setState({ completed_challenges: user_data.completed_challenges.reverse().slice(0, 10)});\n      // calculate pie chart category count\n      var completed_challenges = user_data.completed_challenges;\n      var categoriesCompleted = {\n        \"Action\": 0,\n        \"Food\": 0,\n        \"Finance\": 0,\n        \"Exercise\": 0,\n        \"Communication\": 0\n      };\n\n      // count each of the categories completed\n      for (let i in completed_challenges) {\n        categoriesCompleted[completed_challenges[i].type]++;\n      }\n\n      // push into an array for more appropriate usage\n      for (var category in categoriesCompleted) {\n        this.state.categoryPieData.push([category, categoriesCompleted[category]]);\n      }\n      localStorage.setItem(\"categoryPieData\", JSON.stringify(this.state.categoryPieData))\n      this.drawChart()\n    })\n  }\n\n/*\n* Draw google pie chart using categoryPieData in local storage.\n* Remove the element before every draw to avoid drawing over itself.\n* Called on resize and load of window to adjust chart size\n*/\n  drawChart() {\n     // create google pie chart with categories data\n    var data = new google.visualization.DataTable();\n    data.addColumn('string', \"Category\");\n    data.addColumn('number', \"Count\");\n    data.addRows(JSON.parse(localStorage.getItem(\"categoryPieData\")));\n    var options = {\n      is3D: true, \n      legend :\"bottom\"\n    };\n    var div = document.getElementById(\"chart_div\");\n    while (div != null && div.firstChild) {\n      div.removeChild(div.firstChild);\n    }\n    var chart = new google.visualization.PieChart(document.getElementById('chart_div'));\n    chart.draw(data, options);\n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"container\">\n        <div className =\"row\">\n          <div className=\"card bg-light mb-3\" id=\"total-card\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">You've completed a total of</h5>\n                <p className=\"card-text total-completed-challenges\">{this.state.totalCompleted}</p>\n                <p className=\"card-text\">challenges</p>\n            </div>\n          </div>\n        </div>\n        <div className = \"row\">\n          <div className = \"col-md-6\">\n            <div className=\"analytics-card\">\n              <div className=\"card-body\">\n                  <h5 className=\"card-title\">Categories Completed</h5>\n                  {this.state.totalCompleted === 0 ? \n                    \"None Completed\"\n                    :\n                    <div id=\"chart_div\"></div>\n                  }\n                </div>\n            </div>\n          </div>\n          <div className = \"col-md-6\">\n            <div className=\"analytics-card\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">History of Completed</h5>\n                    {this.state.totalCompleted === 0 ? \n                      \"None Completed\"\n                      :\n                      <div>\n                        { this.state.completed_challenges.map(function(challenge, i) {\n                          let date = challenge.date_completed.toDate();\n                          return <p className=\"challenge-history\" key={i}> {date.getMonth()+1}/{date.getDate()}/{date.getFullYear()}  {challenge.challenges} </p>\n                        })}\n                      </div>          \n                    }      \n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default withRouter(Analytics);","import React, { Component } from 'react';\nimport './Registration.css';\nimport firebase, { auth, db } from '../firebase.js';\nimport { withRouter } from 'react-router';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        login_email: '',\n        login_password: '',\n        warning: '',\n    }\n    this.createNewUser = this.createNewUser.bind(this);\n    this.loginUser = this.loginUser.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n  }\n\n  /*\n* Function Name: componentDidMount()\n* Function Description: check for authorization through firebase listener.\n* Parameters: None.\n* Return: None.\n*/\n  componentDidMount() {\n    console.log(\"registration mounted\");\n    // use listener to check for user login\n     this.fireBaseListener = auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(\"logged on!!!\");\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        this.props.history.push({\n          pathname: '/',\n          state: {\n            \"user\": JSON.stringify(user),\n          }\n        });\n      } \n    });\n\n    // change all tabs to gray out\n    document.getElementById(\"home-tab\").style.setProperty('color', 'gray');\n    document.getElementById(\"home-tab\").style.setProperty('font-weight', 'normal');\n\n    if (document.getElementById(\"analytics-tab\")) {\n      document.getElementById(\"analytics-tab\").style.setProperty('color', 'gray');\n      document.getElementById(\"analytics-tab\").style.setProperty('font-weight', 'normal');\n    }\n  }\n\n  /*\n    * Function Name: componentWillUnmount()\n    * Function Description: Unmount firebase listener\n    * Parameters: None.\n    * Return: None.\n    */\n  componentWillUnmount() {\n    this.fireBaseListener();\n  }\n\n\n  // Simple validation on given email param. Returns true if valid, else return false.\n  validateEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) { return true }\n    return false\n  }\n\n  /*\n  * Description: Simple validation on given password. \n  * 6-20 characters, one lowercase, one uppercase, one digit required.\n  * Returns true if valid, else return false.\n  */\n  validatePassword(password) {\n      if (/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/.test(password)) { return true }\n      return false\n  }\n\n  /*\n  * Function name: validateRegistrationForm(data)\n  * Description: validates email, password, and whether passwords match. \n  * Params: data - obj holding name, email, password, confirmpassword values for validation\n  * Return: true if all valid, false if invalid.\n  */\n  validateForms(data, ifRegistration) {\n    if (!this.validateEmail(data.email)) {\n      this.setState({warning: \"The email you have entered is invalid. Please double-check!\"});\n      return false\n    }\n    if (ifRegistration) {\n      if (data.name === \"\") {\n        this.setState({warning: \"Please enter a display name.\"});\n        return false\n      }\n      if (data.password !== data.confirmPassword) {\n        this.setState({warning: \"Your passwords do not match!\"});\n        return false\n      }\n    }\n    if (!this.validatePassword(data.password)) {\n      this.setState({warning: \"Your password must be 6-20 characters. Have at least one uppercase, one lowercase, and one digit.\"});\n      return false\n    }\n    return true\n  }\n  /*\n    * Function Name: createNewUser()\n    * Function Description: Creates new user in fireabase \n    * Parameters: None.\n    * Return: None.\n    */\n  createNewUser(e) {\n    e.preventDefault()\n    var data = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n    }\n\n    if (!this.validateForms(data, true)) { return }\n   \n    // create firebase user with email and password if validation is passed\n    firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\n    .then(() => {\n        console.log(\"registering...\")\n        var user = firebase.auth().currentUser;\n        user.updateProfile({\n            displayName: data.name,    \n        });\n\n        db.collection(\"users\").doc(user.email).set({\n            name: user.displayName,\n            completed_challenges: [],\n            duplicates: false\n        })\n        localStorage.clear();\n    }\n    ).catch((error) => {\n        this.setState({warning: \"The email address is already in use by another account!\"});\n        console.log(error.code);\n        console.log(error.message);\n      });\n  }\n \n    /*\n    * Function Name: loginUser()\n    * Function Description: Login user in firebase \n    * Parameters: None.\n    * Return: None.\n    */\n  loginUser(e) {\n    e.preventDefault()\n    var data = {\n        email: this.state.login_email,\n        password: this.state.login_password\n    }\n    if (!this.validateForms(data, false)) { return }\n    //sign in the user with email and password via firebase\n    firebase.auth().signInWithEmailAndPassword(data.email, data.password)\n    .then((result) => {\n        console.log(\"checking login credentials...\");\n        localStorage.clear();\n    }).catch((error) => {\n        this.setState({warning: \"Either your email or password login is incorrect.\"});\n        console.log(error.code);\n        console.log(error.message);\n    });\n}\n\n  render() {\n    return (\n        <div>\n          <div><p className=\"form-validation\"> {this.state.warning}</p></div>\n          <div className=\"register-container\"> \n              <div className=\"card\">\n                  <div className=\"card-body\">\n                      <div className=\"card-contents\">\n                        <h5 className=\"card-title\">New to Daily Challenge?</h5>\n                        <p className=\"card-text\">Register to keep track of the challenges you've completed!</p>\n                        <form onSubmit={(e) => this.createNewUser(e)}>\n                            <input type=\"text\" className=\"form-control register-input\" placeholder=\"Display Name\" aria-label=\"Display Name\" value={this.state.name} onChange = {(event) => this.setState({name: event.target.value})} aria-describedby=\"basic-addon1\"></input>\n                            <input type=\"email\" className=\"form-control register-input\" placeholder=\"Email Address\" aria-label=\"Email Address\" value={this.state.email} onChange = {(event) => this.setState({email: event.target.value})} aria-describedby=\"basic-addon1\"></input>\n                            <input type=\"password\" className=\"form-control register-input\" placeholder=\"Password\" aria-label=\"Password\" value={this.state.password} onChange = {(event) => this.setState({password: event.target.value})} aria-describedby=\"basic-addon1\"></input>\n                            <input type=\"password\" className=\"form-control register-input\" placeholder=\"Confirm Password\" aria-label=\"Confirm Password\" value={this.state.confirmPassword} onChange = {(event) => this.setState({confirmPassword: event.target.value})} aria-describedby=\"basic-addon1\"></input>\n\n                            <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                        </form>\n                    </div>\n                  </div>\n              </div>\n              <div className=\"card\">\n                  <div className=\"card-body\">\n                      <div className=\"card-contents\">\n                          <form onSubmit={(e) => this.loginUser(e)}>\n                              <h5 className=\"card-title\">Returning User?</h5>\n                              <p className=\"card-text\">Log In to view analytics and change your settings!</p>\n                              <input type=\"email\" className=\"form-control register-input\" placeholder=\"Email Address\" aria-label=\"Email Address\" value={this.state.login_email} onChange = {(event) => this.setState({login_email: event.target.value})} aria-describedby=\"basic-addon1\"></input>\n                              <input type=\"password\" className=\"form-control register-input\" placeholder=\"Password\" aria-label=\"Password\" value={this.state.login_password} onChange = {(event) => this.setState({login_password: event.target.value})} aria-describedby=\"basic-addon1\"></input>\n                              {/* <a href=\"#\" className=\"forgot-link\">Forgot Password?</a> */}\n                              <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n                          </form>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default withRouter(Registration);\n","import React, { Component } from 'react';\nimport { Route, NavLink, Switch, Link, withRouter} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./HomeComponent/Home\";\nimport Analytics from \"./AnalyticsComponent/Analytics\";\nimport Registration from \"./RegistrationComponent/Registration\";\nimport { auth } from './firebase.js';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      disabled: false,\n    }\n    this.logOut = this.logOut.bind(this);\n    this.analyticsTabClicked = this.analyticsTabClicked.bind(this);\n    this.homeTabClicked = this.homeTabClicked.bind(this);\n  }\n\n  /*\n  * Function Name: componentDidMount()\n  * Function Description: Check for authentication and set UI appropriately\n  * Parameters: None.\n  * Return: None.\n  */\n  componentDidMount() {\n    console.log(this.props);\n    console.log(localStorage);\n    // always check if logged in\n    this.fireBaseListener = auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        localStorage.setItem(\"logged_on\", true);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        this.setState({ user: user });\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ user: null });\n        this.setState({ disabled: true });\n      }\n    });\n    \n  }\n \n  /*\n  * Function Name: componentWillUnmount()\n  * Function Description: unmount the firebase listener to prevent memory leaks\n  * Parameters: None.\n  * Return: None.\n  */\n  componentWillUnmount() {\n    // unmount the listener\n    this.fireBaseListener();\n  }\n\n  /*\n  * Function Name: logOut()\n  * Function Description: log user out of firebase and clear local storage\n  * Parameters: None.\n  * Return: None.\n  */\n  logOut() {\n    console.log(\"logging out\");\n    // sign out the user\n    auth.signOut().then(() => {\n      localStorage.clear();\n      this.setState({user: null});\n      this.setState({disabled: false});\n      this.props.history.push('/');\n      document.body.style.setProperty('background-color', '#FFCC00');\n      document.body.style.transition = \"all 1s ease-out\";\n    }).catch(function(error) {\n      console.log(error)\n    });\n  }\n   \n  /*\n  * Function Name: analyticsTabClicked()\n  * Function Description: change UI to make analytics tab active.\n  * Parameters: e - clicking event to prevent events default.\n  * Return: None.\n  */\n  analyticsTabClicked(e){\n    // don't go to analytics page if the user is not logged in\n    document.getElementById(\"home-tab\").style.setProperty('color', 'gray');\n    document.getElementById(\"home-tab\").style.setProperty('font-weight', 'normal');\n\n    document.getElementById(\"analytics-tab\").style.setProperty('font-weight', 'bold');\n    document.getElementById(\"analytics-tab\").style.setProperty('color', 'white');\n    if(this.state.disabled) { \n      e.preventDefault()\n    }\n  }\n\n  /*\n  * Function Name: homeTabClicked()\n  * Function Description: change UI to make Home tab active.\n  * Parameters: e - clicking event to prevent events default.\n  * Return: None.\n  */\n  homeTabClicked(e) {\n    document.getElementById(\"home-tab\").style.setProperty('color', 'white');\n    document.getElementById(\"home-tab\").style.setProperty('font-weight', 'bold');\n\n    if (document.getElementById(\"analytics-tab\")) {\n      document.getElementById(\"analytics-tab\").style.setProperty('color', 'gray');\n      document.getElementById(\"analytics-tab\").style.setProperty('font-weight', 'normal');\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <ul className=\"header\">\n              <li><Link id=\"home-tab\" to=\"/daily-challenge/\" onClick={(e) => this.homeTabClicked(e)}>Home</Link></li>\n              { this.state.user? \n                <li><Link id=\"analytics-tab\" className =\"analytics-tab\" onClick={(e) => this.analyticsTabClicked(e)} to=\"/daily-challenge/analytics\">Analytics</Link></li>\n              : \n              null \n              }\n              { this.state.user? <button type=\"button\" className=\"btn btn-dark\" onClick={this.logOut}>Log Out</button> : <button type=\"button\" className=\"btn btn-dark\"><NavLink to =\"/register\">Register or Login</NavLink></button> }\n          </ul>\n          <Switch>\n            <Route>\n              <Home user={this.state.user}/>\n            </Route>\n            <Route>\n              <Analytics user={this.state.user}/>\n            </Route>\n            <Route path=\"/daily-challenge/register\" component={Registration}/>\n          </Switch>\n        </div>\n    );\n  }\n}\n\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}